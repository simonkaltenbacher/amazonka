{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveGeneric      #-}
{-# LANGUAGE OverloadedStrings  #-}
{-# LANGUAGE RecordWildCards    #-}
{-# LANGUAGE TypeFamilies       #-}

{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-binds   #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.CloudFormation.DescribeTypeRegistration
-- Copyright   : (c) 2013-2018 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
--
-- Returns information about a type's registration, including its current status and type and version identifiers.
--
--
-- When you initiate a registration request using @'RegisterType' @ , you can then use @'DescribeTypeRegistration' @ to monitor the progress of that registration request.
--
-- Once the registration request has completed, use @'DescribeType' @ to return detailed informaiton about a type.
--
module Network.AWS.CloudFormation.DescribeTypeRegistration
    (
    -- * Creating a Request
      describeTypeRegistration
    , DescribeTypeRegistration
    -- * Request Lenses
    , dtrRegistrationToken

    -- * Destructuring the Response
    , describeTypeRegistrationResponse
    , DescribeTypeRegistrationResponse
    -- * Response Lenses
    , dtrrsTypeVersionARN
    , dtrrsProgressStatus
    , dtrrsTypeARN
    , dtrrsDescription
    , dtrrsResponseStatus
    ) where

import Network.AWS.CloudFormation.Types
import Network.AWS.CloudFormation.Types.Product
import Network.AWS.Lens
import Network.AWS.Prelude
import Network.AWS.Request
import Network.AWS.Response

-- | /See:/ 'describeTypeRegistration' smart constructor.
newtype DescribeTypeRegistration =
  DescribeTypeRegistration'
    { _dtrRegistrationToken :: Text
    }
  deriving (Eq, Read, Show, Data, Typeable, Generic)


-- | Creates a value of 'DescribeTypeRegistration' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'dtrRegistrationToken' - The identifier for this registration request. This registration token is generated by CloudFormation when you initiate a registration request using @'RegisterType' @ .
describeTypeRegistration
    :: Text -- ^ 'dtrRegistrationToken'
    -> DescribeTypeRegistration
describeTypeRegistration pRegistrationToken_ =
  DescribeTypeRegistration' {_dtrRegistrationToken = pRegistrationToken_}


-- | The identifier for this registration request. This registration token is generated by CloudFormation when you initiate a registration request using @'RegisterType' @ .
dtrRegistrationToken :: Lens' DescribeTypeRegistration Text
dtrRegistrationToken = lens _dtrRegistrationToken (\ s a -> s{_dtrRegistrationToken = a})

instance AWSRequest DescribeTypeRegistration where
        type Rs DescribeTypeRegistration =
             DescribeTypeRegistrationResponse
        request = postQuery cloudFormation
        response
          = receiveXMLWrapper "DescribeTypeRegistrationResult"
              (\ s h x ->
                 DescribeTypeRegistrationResponse' <$>
                   (x .@? "TypeVersionArn") <*> (x .@? "ProgressStatus")
                     <*> (x .@? "TypeArn")
                     <*> (x .@? "Description")
                     <*> (pure (fromEnum s)))

instance Hashable DescribeTypeRegistration where

instance NFData DescribeTypeRegistration where

instance ToHeaders DescribeTypeRegistration where
        toHeaders = const mempty

instance ToPath DescribeTypeRegistration where
        toPath = const "/"

instance ToQuery DescribeTypeRegistration where
        toQuery DescribeTypeRegistration'{..}
          = mconcat
              ["Action" =:
                 ("DescribeTypeRegistration" :: ByteString),
               "Version" =: ("2010-05-15" :: ByteString),
               "RegistrationToken" =: _dtrRegistrationToken]

-- | /See:/ 'describeTypeRegistrationResponse' smart constructor.
data DescribeTypeRegistrationResponse =
  DescribeTypeRegistrationResponse'
    { _dtrrsTypeVersionARN :: !(Maybe Text)
    , _dtrrsProgressStatus :: !(Maybe RegistrationStatus)
    , _dtrrsTypeARN        :: !(Maybe Text)
    , _dtrrsDescription    :: !(Maybe Text)
    , _dtrrsResponseStatus :: !Int
    }
  deriving (Eq, Read, Show, Data, Typeable, Generic)


-- | Creates a value of 'DescribeTypeRegistrationResponse' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'dtrrsTypeVersionARN' - The Amazon Resource Name (ARN) of this specific version of the type being registered. For registration requests with a @ProgressStatus@ of other than @COMPLETE@ , this will be @null@ .
--
-- * 'dtrrsProgressStatus' - The current status of the type registration request.
--
-- * 'dtrrsTypeARN' - The Amazon Resource Name (ARN) of the type being registered. For registration requests with a @ProgressStatus@ of other than @COMPLETE@ , this will be @null@ .
--
-- * 'dtrrsDescription' - The description of the type registration request.
--
-- * 'dtrrsResponseStatus' - -- | The response status code.
describeTypeRegistrationResponse
    :: Int -- ^ 'dtrrsResponseStatus'
    -> DescribeTypeRegistrationResponse
describeTypeRegistrationResponse pResponseStatus_ =
  DescribeTypeRegistrationResponse'
    { _dtrrsTypeVersionARN = Nothing
    , _dtrrsProgressStatus = Nothing
    , _dtrrsTypeARN = Nothing
    , _dtrrsDescription = Nothing
    , _dtrrsResponseStatus = pResponseStatus_
    }


-- | The Amazon Resource Name (ARN) of this specific version of the type being registered. For registration requests with a @ProgressStatus@ of other than @COMPLETE@ , this will be @null@ .
dtrrsTypeVersionARN :: Lens' DescribeTypeRegistrationResponse (Maybe Text)
dtrrsTypeVersionARN = lens _dtrrsTypeVersionARN (\ s a -> s{_dtrrsTypeVersionARN = a})

-- | The current status of the type registration request.
dtrrsProgressStatus :: Lens' DescribeTypeRegistrationResponse (Maybe RegistrationStatus)
dtrrsProgressStatus = lens _dtrrsProgressStatus (\ s a -> s{_dtrrsProgressStatus = a})

-- | The Amazon Resource Name (ARN) of the type being registered. For registration requests with a @ProgressStatus@ of other than @COMPLETE@ , this will be @null@ .
dtrrsTypeARN :: Lens' DescribeTypeRegistrationResponse (Maybe Text)
dtrrsTypeARN = lens _dtrrsTypeARN (\ s a -> s{_dtrrsTypeARN = a})

-- | The description of the type registration request.
dtrrsDescription :: Lens' DescribeTypeRegistrationResponse (Maybe Text)
dtrrsDescription = lens _dtrrsDescription (\ s a -> s{_dtrrsDescription = a})

-- | -- | The response status code.
dtrrsResponseStatus :: Lens' DescribeTypeRegistrationResponse Int
dtrrsResponseStatus = lens _dtrrsResponseStatus (\ s a -> s{_dtrrsResponseStatus = a})

instance NFData DescribeTypeRegistrationResponse
         where
